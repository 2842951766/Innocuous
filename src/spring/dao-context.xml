<?xml version="1.0" encoding="UTF-8"?>
<!-- 
修改说明:
	1. sessionFactory bean的修改
		* packagesToScan属性: 修改包名以确定要加载的@entity class
		* hibernateProperties属性: 	根据你使用的数据库修改的hibernate.dialect
	2. 修改context:component-scan节点以确定要加载的dao类
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
	http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-4.3.xsd"
    default-autowire="byName" default-lazy-init="false"> <!-- autowire自动装配,简化spring配置,byName根据名称(setter方法名)查找相应的bean -->







	<!-- 配置mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceUi" />
		<!--<property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>-->
		<!-- mapper扫描 -->
		<!--<property name="mapperLocations" value="classpath:mybatis/*/*.xml"></property>-->
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>

	<!-- component-scan自动搜索@Component , @Controller , @Service , @Repository等标注的类 -->
	<context:component-scan base-package="com.workAttendance.dao.impl" />
</beans>

